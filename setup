#!/bin/bash

# if your ~/.pgpass file is configured with (right 0600) and :    hostname:port:databsae:username:password
#                                                                 localhost:5432:databsae:username:password
# you can remove : --password for no more password prompt
if [ `whoami` != 'root' ];then echo "Sorry this script will only run as root" ; exit 1 ; fi

DEFAULT_USER=$(cat ~/.pgpass | awk -F":" '{print $4}')
DBNAME=$(cat ~/.pgpass | awk -F":" '{print $3}')
PSQPSS=$(cat ~/.pgpass | awk -F":" '{print $5}')
PGSQL=$(which psql)
CREATEDBSQLFILE=$(readlink -m create_dlgsmitedb.sql)
INJECTDATASQLFILE="/tmp/inject_data_$$.sql"
CLASSDATAFILE=$(readlink -m classes.data)
RELICDATAFILE=$(readlink -m relics.data)
CONSUMDATAFILE=$(readlink -m consumables.data)
ITEMSBIGCATDATAFILE=$(readlink -m itemsbigcategories.data)
ITEMSSUBCATDATAFILE=$(readlink -m itemssubcategories.data)
ITEMSDATAFILE=$(readlink -m items.data)
GODSDATAFILE=$(readlink -m gods.data)

su - postgres -c "echo \"\\
CREATE USER ${DEFAULT_USER};
ALTER USER ${DEFAULT_USER} WITH PASSWORD '${PSQPSS}';
CREATE DATABASE ${DBNAME};
grant all privileges on database ${DBNAME} to ${DEFAULT_USER};
ALTER DATABASE ${DBNAME} OWNER TO ${DEFAULT_USER};
\\q
\" | psql -d ${DBNAME}"

echo 'CREATE DATABASE TABLES'
su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${CREATEDBSQLFILE}"


# Generating INJECTDATASQLFILE for Table : CLASSES ( 2 col )
:>"${INJECTDATASQLFILE}"
SAVEIFS=$IFS ; IFS=':'
	cat "${CLASSDATAFILE}" | grep -Ev "^[[:space:]]*$|^#" | while read class_name class_damage_type; do
		class_name=$( echo "${class_name}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		class_damage_type=$( echo "${class_damage_type}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		echo "INSERT INTO CLASSES VALUES ('$class_name','$class_damage_type');" >> "${INJECTDATASQLFILE}"
	done
IFS=$SAVEIFS
echo 'INJECT INTO CLASSES TABLE'
su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${INJECTDATASQLFILE}"

# Generating INJECTDATASQLFILE for Table : RELICS ( 2 col )
:>"${INJECTDATASQLFILE}"
SAVEIFS=$IFS ; IFS=':'
	cat "${RELICDATAFILE}" | grep -Ev "^[[:space:]]*$|^#" | while read relic_name relic_level; do
		relic_name=$( echo "${relic_name}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		relic_level=$( echo "${relic_level}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		echo "INSERT INTO RELICS VALUES ('$relic_name','$relic_level');" >> "${INJECTDATASQLFILE}"
	done
IFS=$SAVEIFS
echo 'INJECT INTO RELICS TABLE'
su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${INJECTDATASQLFILE}"

# Generating INJECTDATASQLFILE for Table : CONSUMABLES ( 1 col )
:>"${INJECTDATASQLFILE}"
SAVEIFS=$IFS ; IFS=':'
	cat "${CONSUMDATAFILE}" | grep -Ev "^[[:space:]]*$|^#" | while read consumable_name; do
		consumable_name=$( echo "${consumable_name}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		echo "INSERT INTO CONSUMABLES VALUES ('$consumable_name');" >> "${INJECTDATASQLFILE}"
	done
IFS=$SAVEIFS
echo 'INJECT INTO CONSUMABLES TABLE'
su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${INJECTDATASQLFILE}"

# Generating INJECTDATASQLFILE for Table : ITEMSBIGCATEGORIES ( 1 col )
:>"${INJECTDATASQLFILE}"
SAVEIFS=$IFS ; IFS=':'
	cat "${ITEMSBIGCATDATAFILE}" | grep -Ev "^[[:space:]]*$|^#" | while read item_bcategory; do
		item_bcategory=$( echo "${item_bcategory}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		echo "INSERT INTO ITEMSBIGCATEGORIES VALUES ('$item_bcategory');" >> "${INJECTDATASQLFILE}"
	done
IFS=$SAVEIFS
echo 'INJECT INTO ITEMSBIGCATEGORIES TABLE'
su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${INJECTDATASQLFILE}"

# Generating INJECTDATASQLFILE for Table : ITEMSSUBCATEGORIES ( 2 col )
:>"${INJECTDATASQLFILE}"
SAVEIFS=$IFS ; IFS=':'
	cat "${ITEMSSUBCATDATAFILE}" | grep -Ev "^[[:space:]]*$|^#" | while read item_scategory item_bcategory; do
		item_scategory=$( echo "${item_scategory}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		item_bcategory=$( echo "${item_bcategory}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		echo "INSERT INTO ITEMSSUBCATEGORIES VALUES ('$item_scategory','$item_bcategory');" >> "${INJECTDATASQLFILE}"
	done
IFS=$SAVEIFS
echo 'INJECT INTO ITEMSSUBCATEGORIES TABLE'
su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${INJECTDATASQLFILE}"

# Generating INJECTDATASQLFILE for Table : ITEMS ( ? col )
:>"${INJECTDATASQLFILE}"
SAVEIFS=$IFS ; IFS=':'
	cat "${ITEMSDATAFILE}" | grep -Ev "^[[:space:]]*$|^#" | while read item_name; do
		item_name=$( echo "${item_name}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		echo "INSERT INTO ITEMS VALUES ('$item_name');" >> "${INJECTDATASQLFILE}"
	done
IFS=$SAVEIFS
echo 'INJECT INTO ITEMS TABLE'
#su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${INJECTDATASQLFILE}"

# Generating INJECTDATASQLFILE for Table : GODS ( 8 col )
:>"${INJECTDATASQLFILE}"
SAVEIFS=$IFS ; IFS=':'
	cat "${GODSDATAFILE}" | grep -Ev "^[[:space:]]*$|^#" | while read god_name god_pantheon god_attack_type god_class_type god_ability_1 god_ability_2 god_ability_3 god_ability_4; do
		simplequote=\'  ; doublequote=\'\'
		god_name=$( echo "${god_name}" | sed 's/^[ \t]*//;s/[ \t]*$//' | sed "s/$simplequote/$doublequote/")
		god_pantheon=$( echo "${god_pantheon}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		god_attack_type=$( echo "${god_attack_type}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		god_class_type=$( echo "${god_class_type}" | sed 's/^[ \t]*//;s/[ \t]*$//')
		god_ability_1=$( echo "${god_ability_1}" | sed 's/^[ \t]*//;s/[ \t]*$//' | sed "s/$simplequote/$doublequote/")
		god_ability_2=$( echo "${god_ability_2}" | sed 's/^[ \t]*//;s/[ \t]*$//' | sed "s/$simplequote/$doublequote/")
		god_ability_3=$( echo "${god_ability_3}" | sed 's/^[ \t]*//;s/[ \t]*$//' | sed "s/$simplequote/$doublequote/")
		god_ability_4=$( echo "${god_ability_4}" | sed 's/^[ \t]*//;s/[ \t]*$//' | sed "s/$simplequote/$doublequote/")
		echo "INSERT INTO GODS VALUES ('$god_name','$god_pantheon','$god_attack_type','$god_class_type','$god_ability_1','$god_ability_2','$god_ability_3','$god_ability_4');" >> "${INJECTDATASQLFILE}"
	done
IFS=$SAVEIFS
echo 'INJECT INTO GODS TABLE'
# echo 'SELECT god_name FROM GODS;' >> "${INJECTDATASQLFILE}" # DEBUG
su - ${DEFAULT_USER} -c "$PGSQL -U ${DEFAULT_USER} -d ${DBNAME} -f ${INJECTDATASQLFILE}"


rm -Rf "${INJECTDATASQLFILE}"
